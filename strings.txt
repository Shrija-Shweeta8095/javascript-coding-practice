1. Reverse a String 
2. Check if a String is a Palindrome 
3. Remove Duplicates from a String 
4. Find the First Non-Repeating Character 
5. Count the Occurrences of Each Character 
6. Reverse Words in a Sentence 
7. Check if Two Strings are Anagrams 
8. Find the Longest Substring Without Repeating Characters 
9. Convert a String to an Integer (atoi Implementation) 
10. Compress a String (Run-Length Encoding) 
11. Find the Most Frequent Character 
12. Find All Substrings of a Given String 
13. Check if a String is a Rotation of Another String 
14. Remove All White Spaces from a String 
15. Check if a String is a Valid Shuffle of Two Strings 
16. Convert a String to Title Case 
17. Find the Longest Common Prefix 
18. Convert a String to a Character Array 
19. Replace Spaces with %20 (URL Encoding) 
20. Convert a Sentence into an Acronym 
21. Check if a String Contains Only Digits 
22. Find the Number of Words in a String 
23. Remove a Given Character from a String 
24. Find the Shortest Word in a String 
25. Find the Longest Palindromic Substring





1. Program to find longest word in a given sentence ?
2. How to check whether a string is palindrome or not ?
3. Write a program to remove duplicates from an array ?
4. Program to find Reverse of a string without using built-in method ?
5. Find the max count of consecutive 1’s in an array ?
6. Find the factorial of given number ?
7. Given 2 arrays that are sorted [0,3,4,31] and [4,6,30]. Merge them and sort [0,3,4,4,6,30,31] ?
8. Create a function which will accepts two arrays arr1 and arr2. The function should return true if every value in arr1 has its corresponding value squared in array2. The frequency of values must be same.
9. Given two strings. Find if one string can be formed by rearranging the letters of other string.
10. Write logic to get unique objects from below array ?
I/P: [{name: "sai"},{name:"Nang"},{name: "sai"},{name:"Nang"},{name: "111111"}];
O/P: [{name: "sai"},{name:"Nang"}{name: "111111"}
11. Write a JavaScript program to find the maximum number in an array.
12. Write a JavaScript function that takes an array of numbers and returns a new array with only the even numbers.
13. Write a JavaScript function to check if a given number is prime.
14. Write a JavaScript program to find the largest element in a nested array.
[[3, 4, 58], [709, 8, 9, [10, 11]], [111, 2]]
15. Write a JavaScript function that returns the Fibonacci sequence up to a given number of terms.
16. Given a string, write a javascript function to count the occurrences of each character in the string.
17. Write a javascript function that sorts an array of numbers in ascending order.
18. Write a javascript function that sorts an array of numbers in descending order.
19. Write a javascript function that reverses the order of words in a sentence without using the built-in reverse() method.
20. Implement a javascript function that flattens a nested array into a single-dimensional array.
21. Write a function which converts string input into an object
("a.b.c", "someValue");
{a: {b: {c: "someValue"}}}
22. Find 3rd least occurred number from an array



1. How does JavaScript work / Event loop
2. Execution context
3. Hoisting
4. Scope chain
5. Var, let, const, temporal dead zone
6. this keyword
7. call, apply, bind
8. Closure
9. Constructor functions, classes
10. Prototypal inheritance
11. Implement debounce
12. Implement throttle
13. Polyfill for map, reduce, filter, forEach
14. Polyfill for call, apply, bind
15. Polyfill for flat method
16. Infinite depth flatten and flatten by a certain number
17. Implement both recursive and iterative approaches
18. Currying
19. Given an object make the keys as values and values as keys. Handle duplicates, assuming values are only strings
20. Implement observable (not very common, good to have)
21. Promises
22. Polyfill for promises
23. Polyfill for Promise. all, allsettled and other methods
24. Implement curry
25. Spread, rest, destructuring
26. Event delegation and event bubbling
27. Implement setinterval using setTimeout
28. Memoize any function
29. Implement async series
30. Generator functions


1️⃣ Call, Apply, and Bind
 Difference between them + write a polyfill.

2️⃣ Flatten Array (No Array.flat)
 Input : [1,2,3,[4,5,6,[7,8,[10,11]]],9] 
 Output: [1,2,3,4,5,6,7,8,10,11,9]

3️⃣ Inline 5 divs in a row without flex/margin/padding
 (Hint: display: inline-block)

4️⃣ Find sum of numbers without for loop
 Input: [1,2,3,4,5] — (Hint: reduce() or recursion)

5️⃣ Deep Copy vs Shallow Copy (How to achieve this)
 const a = { ab: { cd: { ef: true } } };
 const b = a; const c = { ...a };
 console.log(a === b); console.log(a === c);
 a.ab.cd.ef = false;
 console.log(b.ab.cd.ef); console.log(c.ab.cd.ef); 

6️⃣ Promise & Async/Await Output (More questions I will be posting later) 
 async function chart(v){ 
 console.log("start", v); 
 await console.log("middle", v); 
 console.log("end", v);
 }
 chart("first"); 
 chart("second");

7️⃣ Find first repeating character
 Example: "success" → c

8️⃣ Implement a Stopwatch
 Start, Stop, Reset + live display.

9️⃣ Build a To-Do List (Vanilla JS or React)
 Follow-up: How would you optimize re-renders?

🔟 Currying Function for Infinite Sum.
 sum(10)(20)(30)() Output => 60
 sum(10)(20)(30)(40)(50)(60)() Output => 210



 𝗖𝗼𝗿𝗲 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁
1. What is the difference between var, let, and const in JavaScript?
2. What are closures in JavaScript, and how do they work?
3. What is the this keyword in JavaScript, and how does it behave in different contexts?
4. What is a JavaScript promise, and how does it handle asynchronous code?
5. What is the event loop, and how does JavaScript handle asynchronous operations?
6. What is hoisting in JavaScript, and how does it work?
7. What are JavaScript data types, and how do you check the type of a variable?
8. What is the difference between null and undefined in JavaScript?
9. What is a callback function, and how is it used?
10. How do you manage errors in JavaScript?

𝗔𝘀𝘆𝗻𝗰 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁
11. What is the difference between setTimeout() and setInterval()?
12. How do JavaScript promises work, and what is the then() method?
13. What is async/await, and how does it simplify asynchronous code in JavaScript?
14. What are the advantages of using async functions over callbacks?
15. How do you handle multiple promises simultaneously?

𝗙𝗮𝗻𝗰𝘆 𝗙𝗲𝗮𝘁𝘂𝗿𝗲𝘀 𝗶𝗻 𝗝𝗮𝘃𝗮𝗦𝗰𝗿𝗶𝗽𝘁
16. What are higher-order functions in JavaScript, and can you provide an example?
17. What is destructuring in JavaScript, and how is it useful?
18. What are template literals in JavaScript, and how do they work?
19. How does the spread operator work in JavaScript?
20. What is the rest parameter in JavaScript, and how does it differ from the arguments object?

𝗢𝗯𝗷𝗲𝗰𝘁𝘀 𝗮𝗻𝗱 𝗔𝗿𝗿𝗮𝘆𝘀
21. What is the difference between an object and an array in JavaScript?
22. How do you clone an object or array in JavaScript?
23. What are object methods like Object.keys(), Object.values(), and Object.entries()?
24. How does the map() method work in JavaScript, and when would you use it?
25. What is the difference between map() and forEach() in JavaScript?